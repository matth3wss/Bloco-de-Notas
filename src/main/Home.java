package main;

import classes.*;
import java.awt.*;
import javax.swing.*;

public class Home extends javax.swing.JFrame {

    public DBController db = new DBController("notes.db");
    public CardLayout cardLayout = new CardLayout();
    GridBagLayout gridBagLayout = new GridBagLayout();
    GridBagConstraints gridBagConstraints = new GridBagConstraints();

    public Home() {
        initComponents();
        myInitComponents();
    }

    public void myInitComponents() {

        contentPanel.setLayout(cardLayout);
        contentPanel.add(contentNotesPage, "NewNote");
        contentPanel.add(contentRemindersPage, "NewTaskList");
        contentPanel.add(contentEditNotesPage, "EditNote");

        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(0, 0, 0, 0);

        contentNotesPage.allNotesPanel.setLayout(gridBagLayout);
        contentRemindersPage.allRemindersPanel.setLayout(gridBagLayout);
        try {
            db.retrieveAndAddAllNotes(contentNotesPage.allNotesPanel, gridBagLayout, gridBagConstraints);
            for (Component c : contentNotesPage.allNotesPanel.getComponents()) {
                gridBagLayout.setConstraints(c, gridBagConstraints);
                gridBagConstraints.gridy++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        try {
            db.retrieveAndAddAllReminders(contentRemindersPage.allRemindersPanel, gridBagLayout, gridBagConstraints);
            for (Component c : contentRemindersPage.allRemindersPanel.getComponents()) {
                gridBagLayout.setConstraints(c, gridBagConstraints);
                gridBagConstraints.gridy++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            db.close();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideMenuPanel = new javax.swing.JPanel();
        btnNotes = new javax.swing.JButton();
        btnReminders = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        contentNotesPage = new pages.Notes();
        contentRemindersPage = new pages.Reminders();
        contentEditNotesPage = new pages.EditNotes();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sideMenuPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNotes.setText("Notas");
        btnNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotesActionPerformed(evt);
            }
        });

        btnReminders.setText("Lembretes");
        btnReminders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemindersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sideMenuPanelLayout = new javax.swing.GroupLayout(sideMenuPanel);
        sideMenuPanel.setLayout(sideMenuPanelLayout);
        sideMenuPanelLayout.setHorizontalGroup(
                sideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sideMenuPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(sideMenuPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnNotes, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnReminders, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap()));
        sideMenuPanelLayout.setVerticalGroup(
                sideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sideMenuPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnNotes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnReminders)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        contentPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        contentPanel.setLayout(new java.awt.CardLayout());
        contentPanel.add(contentNotesPage, "notes");
        contentPanel.add(contentRemindersPage, "reminders");
        contentPanel.add(contentEditNotesPage, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(sideMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 274,
                                                Short.MAX_VALUE)
                                        .addComponent(sideMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap()));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNotesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNotesActionPerformed
        cardLayout.show(contentPanel, "NewNote");
        contentNotesPage.searchNotes.requestFocusInWindow();
        contentRemindersPage.searchReminders.setText("Pesquisar lembretes");
        contentRemindersPage.searchReminders.setCaretPosition(0);
    }// GEN-LAST:event_btnNotesActionPerformed

    private void btnRemindersActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRemindersActionPerformed
        cardLayout.show(contentPanel, "NewTaskList");
        contentRemindersPage.searchReminders.requestFocusInWindow();
        contentNotesPage.searchNotes.setText("Pesquisar notas");
        contentNotesPage.searchNotes.setCaretPosition(0);
    }// GEN-LAST:event_btnRemindersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException
                | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNotes;
    private javax.swing.JButton btnReminders;
    private pages.EditNotes contentEditNotesPage;
    public pages.Notes contentNotesPage;
    public javax.swing.JPanel contentPanel;
    private pages.Reminders contentRemindersPage;
    private javax.swing.JPanel sideMenuPanel;
    // End of variables declaration//GEN-END:variables
}
